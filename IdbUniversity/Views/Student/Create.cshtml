@model IdbUniversity.Models.ViewModel.StudentViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Create", "Student", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row mt-3">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h2 class="text-center">Insert Student Data</h2>
                </div>
                <div class="card-body studentEditCard">
                    <div class="row">
                        <div class="col-md-6">
                            <h4>Insert Master Information</h4> <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group mt-3">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group mt-3">
                                @Html.LabelFor(model => model.FirstMidName, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.FirstMidName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstMidName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group mt-3">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group mt-3">
                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row mt-3">
                                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsActive)
                                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group mt-3">
                                @Html.LabelFor(model => model.EnrollmentDate, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.EnrollmentDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EnrollmentDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row mt-4">
                                <label>Picture</label>
                                <div class="col-md-8">
                                    <input type="file" class="form-control" name="PicturePath" id="upImage" onchange="readUrl(this)" />
                                    @Html.ValidationMessageFor(model => model.PicturePath, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4">
                                    <img src="~/images/demo_image.png" id="imageFile" class="img-thumbnail" />
                                </div>
                            </div>


                        </div>

                        <div class="col-md-6">
                            <h4 class="text-center">Insert Detail Information</h4> <hr />
                            <h4 class="text-center">Select Course</h4>
                            <div class="d-flex justify-content-end mb-2">
                                <a href="#" id="btnPlus" class="btn btn-warning">Add Course</a>
                            </div>
                            <div id="courseContainer">


                                @Html.Action("AddNewCourse", "Student")

                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="form-group float-start">
                        @Html.ActionLink("Back to List", "Index", null, new {@class="btn btn-primary btn-lg"})
                    </div>
                    <div class="form-group float-end">
                        <div class="col-md-offset-2">
                            <input type="submit" value="Insert Data" class="btn btn-success btn-lg" />
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    
}



<script src="~/Scripts/jquery-3.7.1.js"></script>

<script>
    function readUrl(input) {
        if (input.files && input.files[0]) {
            var rdr = new FileReader();
            rdr.onload = function (e) {
                $('#imageFile').attr('src', e.target.result);
            };
            rdr.readAsDataURL(input.files[0]);
        }
    }

    $(document).ready(function () {


        $('#btnPlus').click(function (e) {
            e.preventDefault();
            var courseContainer = $('#courseContainer');
            $.ajax({
                url: "/Student/AddNewCourse",
                type: "GET",
                success: function (data) {
                    courseContainer.append(data);
                }
            });
        });

        $(document).on('click', "#btnDeleteCourse", function (e) {
            e.preventDefault();
            $(this).parent().parent().remove();
        });
    });
</script>